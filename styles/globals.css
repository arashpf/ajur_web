body {
  background-color: white !important;
}

@tailwind base;
@tailwind components;
@tailwind utilities;


.notailwind{
  /* avoid forcing a fixed height which breaks grid row sizing; allow natural height */
  width: 100%;
  height: auto !important;
  object-fit: cover;
  box-sizing: border-box;
}

/* make sure images and media with this helper class fill their grid cell */
.notailwind img, .notailwind[data-component="img"], .notailwind .MuiCardMedia-root {
  width: 100% !important;
  height: auto !important;
  display: block;
}

/* layout for LazyLoader grid (fallback when not using MUI Grid) */
.lazy-grid {
  width: 100%;
  /* Use breakpoint-based columns to cap the maximum number of columns */
  display: grid;
  grid-template-columns: repeat(1, minmax(120px, 1fr));
  gap: 16px;
  /* add symmetric horizontal gutters so grid items don't touch the viewport edges */
  padding-left: 12px;
  padding-right: 12px;
  box-sizing: border-box;
}

@media (min-width: 600px) {
  /* 2 columns, each can shrink to 110px */
  .lazy-grid { grid-template-columns: repeat(2, minmax(110px, 1fr)); padding-left: 24px; padding-right: 24px; }
}

@media (min-width: 900px) {
  /* 3 columns, each can shrink to 100px */
  .lazy-grid { grid-template-columns: repeat(3, minmax(100px, 1fr)); padding-left: 24px; padding-right: 24px; }
}

@media (min-width: 1200px) {
  /* 4 columns, each can shrink to 90px */
  .lazy-grid { grid-template-columns: repeat(4, minmax(90px, 1fr)); padding-left: 32px; padding-right: 32px; }
}

.lazy-item {
  width: 100%;
  box-sizing: border-box;
  padding: 0; /* remove extra padding to avoid horizontal overflow */
}

/* ensure the grid doesn't cause page-level horizontal overflow */
.lazy-grid {
  box-sizing: border-box;
  max-width: 100%;
  overflow-x: hidden;
}

/* Ensure card-media height overrides the generic notailwind img rules */
.notailwind.card-media {
  /* allow images to scale up to a reasonable max but not force a fixed height */
  height: auto !important;
  max-height: 160px !important;
  object-fit: cover !important;
}

/* stronger global helper in case module selectors are overridden */
.card-media-global {
  max-height: 160px !important;
  height: auto !important;
  object-fit: cover !important;
  display: block;
}

/* auto-fit/minmax handles responsiveness; if you want stricter breakpoints,
   adjust the minmax value above (smaller -> more columns, larger -> fewer). */

@font-face {
  font-family: iransans;
  src: url(../fonts/iran-sans.ttf);
}

@font-face {
  font-family: Tanha;
  src: url(../fonts/Tanha.ttf);
}

@font-face {
  font-family: Sahel;
  src: url(../fonts/Sahel.woff);
}



html,
body {
  padding: 0;
  margin: 0;
  font-family: 'iransans';
  /* background: #f7f7f7; */
  background: white;
}

/* Reserve space for a fixed bottom navbar so it doesn't cover page content.
   Adjust --bottom-nav-height to match your navbar's height. */
:root {
  --bottom-nav-height: 76px;
}

/* Ensure the root containers include bottom padding for the navbar */
#__next {
  padding-bottom: var(--bottom-nav-height);
}

.main-content {
  padding-bottom: var(--bottom-nav-height);
}

/* Ensure the document main and common page wrappers reserve space for
   any fixed/sticky bottom UI (bottom nav, fixed buttons). FrontLayout
   renders a plain <main> so adding this here ensures pages receive the
   padding even when they don't use the .main-content class. */
main {
  padding-bottom: 10px;
}


h1 {
  font-family: 'iransans';
}

h2 {
  font-family: 'iransans';
}

p {
  font-family: 'Tanha';
}

a {

  text-decoration: none !important;
  font-family: 'iransans';
}

* {
  box-sizing: border-box;

}

div {
  font-family: 'iransans';

}

.search-div-wrapper {
  border: 1px solid orange;
  margin-bottom: 50px;

  font-size: 1em;


}

.qrcode__container {}



.swiper-pagination {
  position: unset !important;

}


@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }

  body {

    background: black;
  }
}

.spinnerImageView {
  /* Fullscreen overlay that centers its contents. Use flexbox so child
     elements (spinner image / text) are perfectly centered on all viewports. */
  position: fixed;
  inset: 0; /* top:0; right:0; bottom:0; left:0; */
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  z-index: 9999;
  background: white;
}

.swiper-button-next {}




/* try to add padding and margin to swipper.js arrows */
.swiper-button-next,
.swiper-button-prev {



  color: orange !important;
  display: none !important;
  /* box-shadow: rgba(0, 0, 0, 0.50) 0px 5px 15px; */




}





.swiper-button-prev {
  left: -3px !important;
  font-size: 2px !important;

}

.swiper-button-next {
  right: -3px !important;
  color: gray;
  font-size: 20px;

}




/* TODO: in the moment i dont know to use if statment in dynamic className and using css module
so for now i put the CatCard2 styles in the global css , but i have to fix it later and move this
lines of codes to the CatCard2.module.css */
.cat-card-2-title {

  font-size: 1em;

}

.cat-all-card-2-active {
  padding: 10px;
  background: white;
  margin: 10px;
  border-radius: 5px;
  box-shadow: -5px 5px 5px 1px #ddd;
  background: rgb(188, 186, 184);
}

.cat-all-card-2-active :hover {
  cursor: pointer;
}

.cat-card-2-active {

  padding: 10px;
  background: white;
  margin: 10px;
  border-radius: 5px;
  box-shadow: -5px 5px 5px 1px #ddd;
  background: orange;

}

.cat-card-2-active :hover {
  cursor: pointer;
}

.clickable :hover {
  cursor: pointer;

}



.cat-card-2-disactive {
  padding: 10px;
  background: white;
  margin: 10px;
  border-radius: 5px;
  box-shadow: -5px 5px 5px 1px #ddd;
  text-align: center;
}

.cat-card-2-disactive :hover {
  cursor: pointer;
}

/* TODO: same as upper todo */


.date-picker-active {
  border: 1px solid blue;
  color: white;
  background: rgba(83, 83, 235, 0.081);

}

.date-picker-deactive {

  border: 0px !important;

}

.tour-dialog-date-picker-wrapper p {
  font-family: iransans;
  color: #444;
}

.tour-dialog-time-picker-wrapper {
  padding-top: 10px;
}

.right-slider-open-btn {
  /* display: none !important; */
  position: absolute;
  color: #646262;
  background-color: #3d4351;
  color: white;
  top: 50vh;
  right: 1%;
  z-index: 10;
  border: 2px;
}

.leaflet-popup {
  top: 1% !important;
}

.leaflet-popup-content-wrapper {
  height: 400px;
}

.not-found-wrapper {
  display: flex;
  justify-content: center;
  vertical-align: center;
}

.not-found-image {

  justify-content: center;
  vertical-align: center;
}


@media (max-width: 600px) {

  /* no per-breakpoint sizing here anymore; the global .spinner-image rule
     below handles responsive sizing with a fixed aspect-ratio. */



}

@media (min-width: 600px) {


  .swiper {
    padding: 0 40px !important;
  }

  /* keep other breakpoint-specific styles here if needed; spinner sizing
     is centralized below */

}
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
}

/* Centralized spinner-image rules: keep the GIF centered and preserve its
   aspect-ratio at all sizes. Use aspect-ratio where supported; width-driven
   sizing with height:auto ensures legacy-browsers also keep the intrinsic
   ratio. */
.spinner-image {
  display: block;
  /* Larger on small viewports: increase the minimum and viewport fraction so
     mobile shows a noticeably bigger loader. Keep a large cap for desktops. */
  width: clamp(300px, 90vw, 900px);
  max-width: 98vw;
  height: auto; /* preserve intrinsic aspect ratio */
  object-fit: contain;
  margin: 0 auto;
  /* let the parent (.spinnerImageView) handle centering via flexbox */
  position: relative;
  /* nudge the centered spinner slightly left */
  transform: translateX(-10px);
  z-index: 10000;
}

/* Extra boost for very small devices to make the loader more visible */
@media (max-width: 420px) {
  .spinner-image {
    width: clamp(320px, 94vw, 560px);
  }
}

#__next {
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

body {
  display: flex;
  flex-direction: column;
}

.main-content {
  flex: 1;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}
